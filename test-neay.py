import networkx as nx
import matplotlib.pyplot as plt
from itertools import permutations

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
G = nx.Graph()
cafes = ["Cafe A", "Cafe B", "Cafe C", "Cafe D", "Cafe E"]
G.add_nodes_from(cafes)

edges = [
    ("Cafe A", "Cafe B", 3),
    ("Cafe A", "Cafe D", 2),
    ("Cafe B", "Cafe D", 4),
    ("Cafe B", "Cafe E", 7),
    ("Cafe C", "Cafe D", 6),
    ("Cafe C", "Cafe E", 5),
    ("Cafe D", "Cafe E", 8)
]
G.add_weighted_edges_from(edges)
def draw_nearby_cafes(start, max_results=3):
    """ ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏Å‡∏±‡∏ö‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å """
    if start not in G:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö {start} ‡πÉ‡∏ô‡∏Å‡∏£‡∏≤‡∏ü")
        return
    
    # ‡∏´‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á
    nearby = sorted(G[start].items(), key=lambda x: x[1]["weight"])[:max_results]
    nearby_edges = [(start, cafe) for cafe, _ in nearby]

    # ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü
    plt.figure(figsize=(8, 8))
    pos = nx.spring_layout(G, seed=42)
    
    # ‡∏ß‡∏≤‡∏î‡πÇ‡∏´‡∏ô‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    nx.draw(G, pos, with_labels=True, node_size=3000, node_color="#90CAF9", font_size=12, font_weight="bold", edge_color="gray", width=2)
    
    # ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ï‡πå‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏™‡πâ‡∏ô‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    nx.draw_networkx_edges(G, pos, edgelist=nearby_edges, edge_color="green", width=2.5)
    
    # ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡∏ö‡∏ô‡πÄ‡∏™‡πâ‡∏ô
    edge_labels = {(u, v): G[u][v]["weight"] for u, v in G.edges()}
    nx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels, font_size=10)

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
    plt.title(f"Nearby Caf√©s from {start}", fontsize=16, fontweight="bold", color="darkgreen")
    
    plt.show()

# üîπ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà‡πÉ‡∏Å‡∏•‡πâ Cafe A
selected_cafe = "Cafe A"
draw_nearby_cafes(selected_cafe)
